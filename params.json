{"name":"Global","tagline":"\"Global\" provides accessor methods for your configuration data","body":"# global [![Build Status](https://travis-ci.org/railsware/global.png)](https://travis-ci.org/railsware/global) [![Code Climate](https://codeclimate.com/github/railsware/global.png)](https://codeclimate.com/github/railsware/global)\r\n\r\nThe 'global' gem provides accessor methods for your configuration data. The data is stored in yaml files.\r\n\r\n## Installation\r\n\r\nAdd to Gemfile:\r\n\r\n```ruby\r\ngem 'global'\r\n```\r\n\r\n## Configuration\r\n\r\n```ruby\r\n> Global.environment = \"YOUR_ENV_HERE\"\r\n> Global.config_directory = \"PATH_TO_DIRECTORY_WITH_FILES\"\r\n```\r\n\r\nFor rails put initialization into `config/initializers/global.rb`\r\n\r\n```ruby\r\nGlobal.environment = Rails.env.to_s\r\nGlobal.config_directory = Rails.root.join('config/global').to_s\r\n```\r\n\r\n## Usage\r\n\r\n### General\r\n\r\nConfig file `config/global/hosts.yml`:\r\n\r\n```yml\r\ntest:\r\n  web: localhost\r\n  api: api.localhost\r\ndevelopment:\r\n  web: localhost\r\n  api: api.localhost\r\nproduction:\r\n  web: myhost.com\r\n  api: api.myhost.com\r\n```\r\n\r\nIn the development environment we now have:\r\n\r\n```ruby\r\n> Global.hosts\r\n=> { \"api\" => \"api.localhost\", \"web\" => \"localhost\" }\r\n> Global.hosts.api\r\n=> \"api.localhost\"\r\n```\r\n\r\n### Namespacing\r\n\r\nConfig file `config/global/web/basic_auth.yml` with:\r\n\r\n```yml\r\ntest:\r\n  username: test_user\r\n  password: secret\r\ndevelopment:\r\n  username: development_user\r\n  password: secret\r\nproduction:\r\n  username: production_user\r\n  password: supersecret\r\n```\r\n\r\nAfter that in development environment we have:\r\n\r\n```ruby\r\n> Global.web.basic_auth\r\n=> { \"username\" => \"development_user\", \"password\" => \"secret\" }\r\n> Global.web.basic_auth.username\r\n=> \"development_user\"\r\n```\r\n\r\n### Default section\r\n\r\nConfig file example:\r\n\r\n```yml\r\ndefault:\r\n  web: localhost\r\n  api: api.localhost\r\nproduction:\r\n  web: myhost.com\r\n  api: api.myhost.com\r\n```\r\n\r\nData from the default section is used until it's overridden in a specific environment.\r\n\r\n### Nested configurations\r\n\r\nConfig file `global/nested.yml` with:\r\n```yml\r\ntest:\r\n  group:\r\n    key: \"test value\"\r\ndevelopment:\r\n  group:\r\n    key: \"development value\"\r\nproduction:\r\n  group:\r\n    key: \"production value\"\r\n```\r\n\r\nNested options can then be accessed as follows: \r\n\r\n```ruby\r\n> Global.nested.group.key\r\n=> \"development value\"\r\n```\r\n\r\n### ERB support\r\n\r\nConfig file `global/file_name.yml` with:\r\n\r\n```yml\r\ntest:\r\n  key: <%=1+1%>\r\ndevelopment:\r\n  key: <%=2+2%>\r\nproduction:\r\n  key: <%=3+3%>\r\n```\r\n\r\nAs a result, in the development environment we have:\r\n\r\n```ruby\r\n> Global.file_name.key\r\n=> 4\r\n```\r\n\r\n### Reload configuration data\r\n\r\n```ruby\r\n> Global.reload!\r\n```\r\n\r\n## Contributing to global\r\n\r\n* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.\r\n* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.\r\n* Fork the project.\r\n* Start a feature/bugfix branch.\r\n* Commit and push until you are happy with your contribution.\r\n* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.\r\n* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.\r\n\r\n## Copyright\r\n\r\nCopyright (c) Railsware LLC. See LICENSE.txt for further details.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}